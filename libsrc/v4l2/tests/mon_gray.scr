# test script for vmenu
If $argc!=1 "error_exit 'usage:  quip video_dev_idx < mon1.scr'"

Set device_idx	$1

max_warnings 10

Set devname /dev/video$device_idx
Set ready_name n_ready.$devname
Set newest_name newest.$devname
Set oldest_name oldest.$devname

v4l2
  open $devname
  advise "first device opened"
  standards set_standard NTSC quit
  #format gray	// doesn't do anything???
  format yuyv
#  open /dev/video1
#  advise "second device opened"

  Assign n 640*480
  advise "640x480 = $n"

#  start
#  next
#  next next next
  quit

#Image rgb 480 640 3 u_byte
Image y 480 640 1 u_byte
#Image u 480 320 1 u_byte
#Image v 480 320 1 u_byte
#data
#  subsample c1 y
#  	320 0 2
#	480 0 1
#  subsample c2 y
#  	320 1 2
#	480 0 1
#  quit

Viewer_For v1 y
Viewer_For v2 y

Posn_Window v1 0 0
Posn_Window v2 650 0

Set i_buf 0

Define Next 0
Set name /dev/video$device_idx.buffer$i_buf
v4l2 next quit
#v4l2 yuv2rgb rgb $name quit
#Show_Bytes rgb v2
v4l2 yuv2y y $name quit
Show_Bytes y v2
#Show_Bytes $name v2
Increment i_buf
If $i_buf>=4 "Set i_buf 0"
.

#  Next

Dup_Float f y
Dup_Float accum y
Dup_Float mean y
Dup_Float var_accum y
Dup_Float var_mean y
Info f
Set n_accum 0
VSet accum 0
VSet var_accum 0

Define Stat 1 msg
advise "$1:  n_ready = $$ready_name   newest = $$newest_name   oldest = $$oldest_name"
.

#debug v4l2

v4l2
  set_n_buffers 6
  flow
    advise "flow STARTING"
    start
#      Stat started
      do
#        Stat 'calling wait'
	wait
#        Stat 'back from wait'

	Set oname oldest./dev/video$device_idx
	Set bufname /dev/video$device_idx.buffer$$oname
#	Print bufname
	quit yuv2gray y $bufname flow
#	Convert f y

	release
#        Stat 'back from release'
#	date

	#Pause

	quit quit
#	    Disp_Gray f v1
	    Show_Bytes y v1
#	    usleep 32000
	    usleep 12000
	#  #  Disp_Gray var_mean v2
	    v4l2 flow

	while 1
    

Pause

advise "\nType ^D to proceed..."
  < /dev/tty


