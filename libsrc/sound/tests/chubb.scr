#
# make some "tone scrambles"
#
max_warnings 2

Set tone_duration_msec		80
Set scramble_duration_sec	4
Set base_freq_hz		440
Set sample_rate			44000	# or 44100?
Assign tone_duration_samples	ceil(($tone_duration_msec/1000)*$sample_rate)
Assign twopi			8*atan(1)

#				samples/sec  /  cycles/sec = samples/cycle
Assign base_period		$sample_rate/$base_freq_hz
Assign base_arg_inc		$twopi/$base_period

Assign fundamental	1
Assign minor_third	pow(2,3/12)
Assign major_third	pow(2,4/12)
Assign fifth		pow(2,7/12)
Assign octave		2

Assign tones_per_stim	ceil($scramble_duration_sec*1000/$tone_duration_msec)
Assign samples_per_stim	$tones_per_stim*$tone_duration_samples

Vector tone_list $tones_per_stim 1 float
Vector tone_indices $tones_per_stim 1 u_byte

Vector tone_set1 256 1 float
Vector tone_set2 256 1 float
VSet tone_set1 0
VSet tone_set2 0
Subvector _tone_set1 tone_set1 4 0
Subvector _tone_set2 tone_set2 4 0

data ascii read _tone_set1 -
	$fundamental
	$minor_third
	$fifth
	$octave
  quit quit

data ascii read _tone_set2 -
	$fundamental
	$major_third
	$fifth
	$octave
  quit quit

Vector stim $samples_per_stim 1 float
Vector sound1 $samples_per_stim 1 short
Vector sound2 $samples_per_stim 1 short

Define Make_Stim 2 target tone_set
VUni tone_list
VSMul tone_list tone_list 4
VFloor tone_list tone_list
VSMin tone_list tone_list 3	# just in case...
Convert tone_indices tone_list
Map_B tone_list tone_indices $2
#Display tone_list
VSMul tone_list tone_list $base_arg_inc
Enlarge stim tone_list
Cumsum stim stim
VSin stim stim
VSMul stim stim 0x7ff0	# scale to short range
Convert $1 stim
.

Make_Stim sound1 tone_set1
Make_Stim sound2 tone_set2

advise "Playing tone scramble with minor third..."
sound playback play sound1 quit quit

sleep 2
advise "Playing tone scramble with major third..."
sound playback play sound2 quit quit

Pause
exit

